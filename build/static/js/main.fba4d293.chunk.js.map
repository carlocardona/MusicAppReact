{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","data.js","components/Nav.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","playPromise","current","play","undefined","then","audio","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","className","currentTime","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","chillHop","color","uuidv4","Nav","setLibraryStatus","faMusic","playAudio","catch","error","console","log","App","useRef","useState","data","timeUpdateHandler","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fba4d293.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons'\n\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setCurrentSong, setSongs }) => {\n\n    useEffect(() => {\n        const newSongs = songs.map((song) => {\n            if (song.id === currentSong.id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        });\n\n        if (isPlaying) {\n\n            const playPromise = audioRef.current.play();\n\n            if (playPromise !== undefined) {\n                playPromise.then((audio) => {\n                    audioRef.current.play();\n                });\n            }\n        }\n\n        setSongs(newSongs)\n    }, [currentSong] )\n\n    const playSongHandler = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({ ...songInfo, currentTime: e.target.value })\n    }\n\n\n    const getTime = (time) => {\n        return (\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n        if(direction === 'skip-forward'){\n            await setCurrentSong(songs[ (currentIndex + 1) % songs.length])\n        } \n        if(direction === 'skip-back'){\n            if((currentIndex -1) % songs.length === -1){\n                await setCurrentSong(songs[songs.length -1]);\n\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[ (currentIndex - 1) % songs.length])\n        }\n        if(isPlaying) audioRef.current.play();\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input\n                    min={0}\n                    max={songInfo.duration || 0}\n                    value={songInfo.currentTime}\n                    onChange={dragHandler}\n                    type=\"range\" />\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\n\nconst Song = ({ currentSong }) => {\n    return (\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n\nexport default Song\n","import React from 'react'\n// import { playAudio } from '../util'\n\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs }) => {\n\n    const songSelectHandler = async () => {\n\n        const selectedSong = songs.filter((state) => state.id === id);\n        await setCurrentSong(selectedSong[0]);\n\n        const newSongs = songs.map((song) => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        });\n\n        setSongs(newSongs)\n\n        if(isPlaying) audioRef.current.play();\n\n    }\n\n    return (\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong\n","import React from 'react'\nimport LibrarySong from './LibrarySong'\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return (\n        <div className={ `library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className='library-songs'>\n                {songs.map((song) => (\n                    <LibrarySong\n                        songs={songs}\n                        setCurrentSong={setCurrentSong}\n                        song={song}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        setSongs={setSongs}\n                    />))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n    return [\n        {\n            name: 'Hidden Structure',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg',\n            artist: ' Leavv, Flitz&Suppe ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=9913',\n            color: ['#88694F', '#214241'],\n            id: uuidv4(),\n            active: true,\n        },\n        {\n            name: 'Wildlife',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg',\n            artist: ' Philanthrope, Chromonicci ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10263',\n            color: ['#A83E38', '#2E1A19'],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: 'Backyard Puddles',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-1024x1024.jpg',\n            artist: ' Sleepy Fish ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10032',\n            color: ['#34728F', '#C8DBDF'],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: 'Lax Incense',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/01/6b1bb8736ee3e972747bc11f312e31cf7f5823e4-1024x1024.jpg',\n            artist: ' Mama Aiuto, Daphné ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=12125',\n            color: ['#633335', '#21362F'],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: 'Sugarless',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg',\n            artist: ' The Field Tapes, Aviino ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=11243',\n            color: ['#31364A', '#EBF1E5'],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: 'Snowstalgia',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg',\n            artist: ' invention_ ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10305',\n            color: ['#D6547A', '#62558B'],\n            id: uuidv4(),\n            active: false,\n        },\n        {\n            name: 'Sleepover',\n            cover: 'https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg',\n            artist: ' Nymano, JK the Sage ',\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=10130',\n            color: ['#181413', '#776188'],\n            id: uuidv4(),\n            active: false,\n        }\n    ]\n}\n\nexport default chillHop;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\n\nconst Nav = ( {setLibraryStatus, libraryStatus}) => {\n    return (\n        <nav>\n            <h1>Tuneage</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav\n","export const playAudio = (isPlaying, audioRef) => {\n    if (isPlaying) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then((audio) => {\n            audioRef.current.play();\n          })\n          .catch((error) => console.log(error));\n      }\n    }\n  };","import React, { useState, useRef } from 'react'\nimport './styles/app.scss'\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Library from './components/Library'\nimport data from './data'\nimport Nav from './components/Nav'\nimport { playAudio } from \"./util\"\n\n\nfunction App() {\n\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    playAudio(isPlaying, audioRef);\n    return;\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo} \n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        />\n\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}>\n        onEnded={songEndHandler}\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}